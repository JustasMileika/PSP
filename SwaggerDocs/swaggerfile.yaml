openapi: 3.0.1
info:
  title: CheckoutService
  version: '1.0'
paths:
  /api/checkout/cash/{orderId}:
    post:
      tags:
        - Checkout
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Price'
          text/json:
            schema:
              $ref: '#/components/schemas/Price'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Price'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Payment'
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
            text/json:
              schema:
                $ref: '#/components/schemas/Payment'
  /api/customer:
    get:
      tags:
        - Customer
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
    post:
      tags:
        - Customer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
          text/json:
            schema:
              $ref: '#/components/schemas/Customer'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Customer'
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
            text/json:
              schema:
                $ref: '#/components/schemas/Customer'
  /api/customer/{id}:
    get:
      tags:
        - Customer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Customer'
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
            text/json:
              schema:
                $ref: '#/components/schemas/Customer'
    put:
      tags:
        - Customer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
          text/json:
            schema:
              $ref: '#/components/schemas/Customer'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Customer'
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
            text/json:
              schema:
                $ref: '#/components/schemas/Customer'
    delete:
      tags:
        - Customer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Customer'
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
            text/json:
              schema:
                $ref: '#/components/schemas/Customer'
  /api/notification/orderPayed:
    post:
      tags:
        - Notification
      responses:
        '200':
          description: Success
  /api/notification/orderCompleted:
    post:
      tags:
        - Notification
      responses:
        '200':
          description: Success
  /api/notification/orderPrepared:
    post:
      tags:
        - Notification
      responses:
        '200':
          description: Success
  /api/order:
    get:
      tags:
        - Order
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
    post:
      tags:
        - Order
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          text/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Order'
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
            text/json:
              schema:
                $ref: '#/components/schemas/Order'
  /api/order/{id}:
    get:
      tags:
        - Order
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Order'
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
            text/json:
              schema:
                $ref: '#/components/schemas/Order'
    put:
      tags:
        - Order
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderStatus'
          text/json:
            schema:
              $ref: '#/components/schemas/OrderStatus'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrderStatus'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Order'
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
            text/json:
              schema:
                $ref: '#/components/schemas/Order'
    delete:
      tags:
        - Order
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Order'
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
            text/json:
              schema:
                $ref: '#/components/schemas/Order'
  /api/product:
    get:
      tags:
        - Product
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
    post:
      tags:
        - Product
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          text/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Product'
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
            text/json:
              schema:
                $ref: '#/components/schemas/Product'
  /api/product/{id}:
    get:
      tags:
        - Product
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Product'
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
            text/json:
              schema:
                $ref: '#/components/schemas/Product'
    put:
      tags:
        - Product
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          text/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Product'
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
            text/json:
              schema:
                $ref: '#/components/schemas/Product'
    delete:
      tags:
        - Product
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Product'
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
            text/json:
              schema:
                $ref: '#/components/schemas/Product'
components:
  schemas:
    Payment:
      type: object
      properties:
        id:
          type: string
          format: uuid
        orderId:
          type: string
          format: uuid
        createdDate:
          type: string
          format: date-time
        paymentType:
          $ref: '#/components/schemas/PaymentType'
        amount:
          $ref: '#/components/schemas/Price'
      additionalProperties: false
    PaymentType:
      enum:
        - 0
        - 1
        - 2
        - 3
      type: integer
      format: int32
    Customer:
      type: object
      properties:
        id:
          type: integer
          format: int32
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        accumulatedPoints:
          $ref: '#/components/schemas/LoyaltyPoints'
      additionalProperties: false
    LoyaltyPoints:
      type: object
      additionalProperties: false
    Order:
      type: object
      properties:
        id:
          type: integer
          format: int32
        createdDate:
          type: string
          format: date-time
        updatedDate:
          type: string
          format: date-time
        orderItems:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
          nullable: true
        customerId:
          type: string
          format: uuid
        orderStatus:
          $ref: '#/components/schemas/OrderStatus'
        tipAmount:
          $ref: '#/components/schemas/Price'
      additionalProperties: false
    OrderItem:
      type: object
      properties:
        productId:
          type: string
          format: uuid
        quantity:
          type: integer
          format: int32
      additionalProperties: false
    OrderStatus:
      enum:
        - 0
        - 1
        - 2
        - 3
      type: integer
      format: int32
    Price:
      type: object
      additionalProperties: false
    Product:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        price:
          $ref: '#/components/schemas/Price'
        loyaltyCashback:
          $ref: '#/components/schemas/LoyaltyPoints'
        stock:
          $ref: '#/components/schemas/Stock'
      additionalProperties: false
    Stock:
      type: object
      additionalProperties: false
